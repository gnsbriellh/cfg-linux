#!/bin/bash
cat << "EOF"
      ______                         __                                       ______                        ______   __           
     /      \                       |  \                                     /      \                      /      \ |  \          
    |  $$$$$$\ __    __   _______  _| $$_     ______   ______ ____          |  $$$$$$\  ______   _______  |  $$$$$$\ \$$  ______  
    | $$___\$$|  \  |  \ /       \|   $$ \   /      \ |      \    \  ______ | $$   \$$ /      \ |       \ | $$_  \$$|  \ /      \ 
     \$$    \ | $$  | $$|  $$$$$$$ \$$$$$$  |  $$$$$$\| $$$$$$\$$$$\|      \| $$      |  $$$$$$\| $$$$$$$\| $$ \    | $$|  $$$$$$\
     _\$$$$$$\| $$  | $$ \$$    \   | $$ __ | $$    $$| $$ | $$ | $$ \$$$$$$| $$   __ | $$  | $$| $$  | $$| $$$$    | $$| $$  | $$
    |  \__| $$| $$__/ $$ _\$$$$$$\  | $$|  \| $$$$$$$$| $$ | $$ | $$        | $$__/  \| $$__/ $$| $$  | $$| $$      | $$| $$__| $$
     \$$    $$ \$$    $$|       $$   \$$  $$ \$$     \| $$ | $$ | $$         \$$    $$ \$$    $$| $$  | $$| $$      | $$ \$$    $$
      \$$$$$$  _\$$$$$$$ \$$$$$$$     \$$$$   \$$$$$$$ \$$  \$$  \$$          \$$$$$$   \$$$$$$  \$$   \$$ \$$       \$$ _\$$$$$$$
              |  \__| $$                                                                                                |  \__| $$
               \$$    $$                                                                                                 \$$    $$
                \$$$$$$                                                                                                   \$$$$$$ 
                                                                                                                                  
EOF
echo   ; sleep 2 ;

# Configure Time Zone
    ln -sf /usr/share/zoneinfo/America/Sao_Paulo /etc/localtime -v

# Cofig Hardware Clock
    hwclock --systohc -v

# Configure Locale
    sed -i -e 's/#en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/g' /etc/locale.gen
    locale-gen
    echo "LANG=en_US.UTF-8" >> /etc/locale.conf

# Configure Hostname
    read -p "Enter HOSTNAME: " SET_HOSTNAME ; echo  
    echo $SET_HOSTNAME >> /etc/hostname

# Configure Pretty Hostname
    read -p "Enter Pretty Hostname: " SET_PRETTYNAME ; echo  
    SET_ICON_NAME="computer"
    read -p "Is this a 'laptop' or a 'desktop'? " SET_CHASSIS ; echo  
    SET_DEPLOYMENT="production"

    echo PRETTY_HOSTNAME='"'$SET_PRETTYNAME'"' >> /etc/machine-info
    echo ICON_NAME=$SET_ICON_NAME >> /etc/machine-info
    echo CHASSIS=$SET_CHASSIS >> /etc/machine-info
    echo DEPLOYMENT=$SET_DEPLOYMENT >> /etc/machine-info

# Configure Hosts
    echo "127.0.0.1     localhost" >> /etc/hosts
    echo "::1           localhost" >> /etc/hosts
    echo "127.0.1.1     $SET_HOSTNAME.localdomain $SET_HOSTNAME" >> /etc/hosts

# Configuring Keyboard Layout (Console)
    echo "KEYMAP=us-acentos" >> /etc/vconsole.conf

# Add Multilib to pacman
    echo "[multilib]" >> /etc/pacman.conf
    echo "Include = /etc/pacman.d/mirrorlist" >> /etc/pacman.conf

# Update Repository
    pacman -Syy --noconfirm

# GRUB #
    pacman -S               \
    grub                    \
    efibootmgr              \
    os-prober               \
    intel-ucode             \
    networkmanager          --noconfirm

    systemctl enable NetworkManager.service

    grub-install --target=x86_64-efi --efi-directory=/boot/efi --bootloader-id=GRUB --recheck
    sed -i -e 's/GRUB_TIMEOUT=5/GRUB_TIMEOUT=0.1/g' /etc/default/grub
    grub-mkconfig -o /boot/grub/grub.cfg

# Done
    echo "System Configuration Has been Completed !" ; sleep 2

cat << "EOF" 
     __    __   ______   ________  _______                        ______   _______   ________   ______  ________  ______   ______   __    __ 
    |  \  |  \ /      \ |        \|       \                      /      \ |       \ |        \ /      \|        \|      \ /      \ |  \  |  \
    | $$  | $$|  $$$$$$\| $$$$$$$$| $$$$$$$\                    |  $$$$$$\| $$$$$$$\| $$$$$$$$|  $$$$$$\\$$$$$$$$ \$$$$$$|  $$$$$$\| $$\ | $$
    | $$  | $$| $$___\$$| $$__    | $$__| $$       ______       | $$   \$$| $$__| $$| $$__    | $$__| $$  | $$     | $$  | $$  | $$| $$$\| $$
    | $$  | $$ \$$    \ | $$  \   | $$    $$      |      \      | $$      | $$    $$| $$  \   | $$    $$  | $$     | $$  | $$  | $$| $$$$\ $$
    | $$  | $$ _\$$$$$$\| $$$$$   | $$$$$$$\       \$$$$$$      | $$   __ | $$$$$$$\| $$$$$   | $$$$$$$$  | $$     | $$  | $$  | $$| $$\$$ $$
    | $$__/ $$|  \__| $$| $$_____ | $$  | $$                    | $$__/  \| $$  | $$| $$_____ | $$  | $$  | $$    _| $$_ | $$__/ $$| $$ \$$$$
     \$$    $$ \$$    $$| $$     \| $$  | $$                     \$$    $$| $$  | $$| $$     \| $$  | $$  | $$   |   $$ \ \$$    $$| $$  \$$$
      \$$$$$$   \$$$$$$  \$$$$$$$$ \$$   \$$                      \$$$$$$  \$$   \$$ \$$$$$$$$ \$$   \$$   \$$    \$$$$$$  \$$$$$$  \$$   \$$
EOF

echo   ; sleep 2 ;

# Read Username
    read -p "Enter USERNAME: " SET_USER ; echo  

# Create User
    useradd -m -G wheel -s /bin/bash $SET_USER

# Change Passwd from $SET_USER and root
    echo "Set password for $SET_USER"
    passwd $SET_USER

    echo "Set password for root user"
    passwd root

# PROMPT TO OPEN VISUDO WITH NANO #
    while true; do
        read -p "Would you like to config VISUDO with nano ?  [Y/n] " yn
        case $yn in
            [Yy]* ) EDITOR=nano visudo; break;;
            [Nn]* ) echo "Cancelled !"; sleep 2 ; break;;
            * ) echo "Please answer with Y[es] or N[o].";;
        esac
    done

# Move/Create Folders #

    # /etc/skel/ #
        cp -r $PWD/Files/etc /
        cp $PWD/Files/etc/skel/.bash* /root/

# Done
    echo "User set-up has been completed !" ; sleep 2
